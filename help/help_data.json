[
   {
      "keyword": "ENTER",
      "text": "usage:\r\n   [direction]\r\n   enter [direction or exit name]\r\n\r\n   Moves your character through the exit specified. Used to\r\n   travel through the game world.\r\n",
      "level": 0
   },
   {
      "keyword": "DEATHMESSAGE",
      "text": "",
      "level": 0
   },
   {
      "keyword": "ANSI",
      "text": "SocketMud(tm) supports ANSI colors, and you can access them by using the\r\n'#' character, followed by the colorkey from the table below.\r\n\r\nYellow    #yy #YY#n\r\nBlue      #bb #BB#n\r\nGreen     #gg #GG#n\r\nRed       #rr #RR#n\r\nCyan      #cc #CC#n\r\nPurple    #pp #PP#n\r\nDark      #dd #DD#n\r\nWhite     #ww #WW#n\r\n\r\nThe 'n' key is the default SocketMud(tm) color, and the mudcolor will\r\nalways revert to this color at the end of a string.\r\n",
      "level": 0
   },
   {
      "keyword": "GREETING",
      "text": "                  ##                                                      \r\n############### #####      ####  ############    ############## ##########\r\n###############   ###########    ##########      ############## ############\r\n ###                 ######      ###   ######### ###            ###    #####\r\n ###                   ###       ##############  ############## ############\r\n ##############        ###       ####  ######    ###            ###   #####\r\n###############        ###       #### ####       ############## ###      ###\r\n                                 ######                                    ##\r\n                                 ###                   #                     #\r\n                                 #                   ###     \r\n                     ##             ## #####       #####  ##################\r\n                     #####        #### #####       #####  ##################\r\n                     ########  ####### #####       #####  #####       ######\r\n                     ################# #####       #####  #####      #######\r\n                     ##### ##### ##### #################  #####   ########  \r\n                     #####       ##### #################  #############     \r\n                                                          ##########        \r\n                                                          #######           \r\n                                                          ####              \r\n                                                          ##\r\nWELCOME TO THE NEON JUNGLE\r\n\r\n",
      "level": 0
   },
   {
      "keyword": "MCCP",
      "text": "The Mud Client Compression Protocol has the purpose of reducing the\r\nbandwidth usage of the mudserver, by using an MCCP-complient mudclient,\r\nthe data send to you will be compressed by 80-85%, and thus not only\r\nreducing the amount of data processed by the server, but also greatly\r\nreduces the amount of data you need to download (i.e. less lag for you).\r\n\r\nThis MUD supports both versions 1 and 2 of the compression protocol,\r\nand any client supporting either of those version can be used to\r\nenable compression. Most clients enable compression automatically,\r\nbut some require that you type 'compress'. The same command can also\r\nbe used to disable compression.\r\n\r\nMCCP was created by Oliver Jowett\r\n",
      "level": 0
   },
   {
      "keyword": "MOTD",
      "text": "Welcome to CyberMUD!\r\n\r\nEverything is still under construction so bare\r\nwith us. If you notice any bugs please report\r\nthem to the MUD administrators. If you have any\r\nideas please give them to, you guessed it, the\r\nMUD administrators.\r\n\r\nThanks!\r\nThe MUD Administrators.\r\n",
      "level": 0
   },
   {
      "keyword": "ACCEPT",
      "text": "Usage:\r\n   accept [item name or player name]\r\n\r\n   Used to accept an offered item. In the case of multiple offers\r\n   you can specify which object you are accepting or from which\r\n   person you are accepting an offer from.\r\n\r\n   Note: You must have at leat one free hand available to receive\r\n   the offered item.\r\n",
      "level": 0
   },
   {
      "keyword": "death_message",
      "text": "...Everything fades to black...\r\n\r\nSuddenly, a bright dot of light flickers into view in the distance.\r\nThe light grows and grows until it fully encompasses your entire field\r\nof vision.\r\n\r\nYour eyes slowly focus on the robotic arms and intricate sensor arrays\r\nwhizzing around your body just in time to fade back out to black once\r\nmore.\r\n\r\nWhen you come to you find yourself in a strange, sterile room...\r\n",
      "level": 0
   },
   {
      "keyword": "CREDITS",
      "text": "SocketMUD(tm) was originally coded by Brian Graversen and improved upon by\r\nthe various coders in the community that took the time to return useful\r\nfeedback.\r\n\r\nThanks goes to Beej for his network guide, which got me started with \r\nnetwork programming, and to Erwin Andreasen whose various small articles\r\non MUD programming and useful bits of code has helped my over the time.\r\n\r\nThanks also goes to all the helpful people who have spend the time to help\r\nme improve on the original SocketMUD(tm) release.\r\n",
      "level": 0
   },
   {
      "keyword": "north south east west northeast northwest southeast southwest up down ne nw se sw",
      "text": "These commands move you through the game world in their respective directions.\r\n\r\nSome exits have locks and/or doors, these can be interacted with using the 'unlock' and 'open' command.",
      "level": 0
   },
   {
      "keyword": "aset",
      "text": "Usage:\r\n    aset <filename.json> <action> <arg>\r\n\r\n    Actions          Arguments\r\n    -------          ---------\r\n    name             The name of the area\r\n    author           The author of the area\r\n    reset_interval   How long between area repops. Must be between 5 and 60 minutes\r\n    o_low            The lower bound of object vnums.\r\n    m_low            The lower bound of mobile vnums.\r\n    r_low            The lower bound of room vnums.\r\n    o_hi             The upper bound of object vnums.\r\n    m_hi             The upper bound of mobile vnums.\r\n    r_hi             The upper bound of room vnums.\r\n",
      "level": 0
   },
   {
      "keyword": "ammo",
      "text": "Ammunition Codes are as follows. Set a firearm, bullet, or magazine's ivar1\nto the specified round below:\n 0 - 38 Special\n 1 - 9mm Luger\n 2 - .357 Magnum\n 3 - .45 APC\n 4 - 10mm Auto\n 5 - .44 Magnum\n 6 - .50 AE\n 7 - 5.56mm NATO\n 8 - 7.62mm Kalashnikov\n 9 - 7.62mm NATO\n10 - 7.62mm Nagant\n11 - 12.7x108mm\n12 - 14.5x114mm\n13 - 10 Gauge\n14 - 12 Gauge\n15 - 20 Gauge\n",
      "level": 0
   },
   {
      "keyword": "oset",
      "text": "Usage:\r\n    oset <object name or vnum> <action> <arguments>\r\n    Actions          Arguments\r\n     short            Short description. Include a/an\r\n     long             Long description. Include final '.'\r\n     name             Keywords used to interact with object\r\n     type             Object type. See help objecttypes\r\n     wear             Where the object can be worn. See help wearlocations\r\n     capacity         How much, in cubic centimeters, the object can hold\r\n     volume           The volume, in cubic centimeters, of the object\r\n     weight           The weight, in kilograms, of the object\r\n     get              true or false. Can the object be picked up?\r\n     ivar1-6          See help ivar.\r\n     svar1-6          See help svar.",
      "level": 4
   },
   {
      "keyword": "objecttypes otypes object_types o_types",
      "text": "Objects can have the following types:\r\n \r\n1. Clothing\r\n2. Armor\r\n3. Firearm\r\n4. Blade\r\n5. Bludgeon\r\n6. Electronics\r\n7. Computer\r\n8. Machine\r\n9. Scrap\r\n10. Furniture\r\n11. Lockpick\r\n12. Sheath\r\n13. Holster\r\n14. Container\r\n15. Beverage\r\n16. Magazine (For ammunition)\r\n17. Bandolier (For magazines)\r\n18. Bullet\r\n19. Book\r\n20. Memory (For computers/electronics)\r\n21. Chip\r\n22. Key\r\n23. Corpse\r\n24. Drugs\r\n25. Unknown",
      "level": 4
   },
   {
      "keyword": "wearlocations wear_locations wearlocs wear_locs",
      "text": "Objects can be worn in the following locations:\r\n  1.  Head\r\n  2.  Eyes\r\n  3.  Face\r\n  4.  Neck\r\n  5.  Body\r\n  6.  Shoulders\r\n  7.  Arms\r\n  8.  Hands\r\n  9.  Waist\r\n  10. Legs\r\n  11. Feet\r\n  12. Slung\r\n  13. None",
      "level": 4
   },
   {
      "keyword": "bodyparts",
      "text": "Humanoid bodies have the following body parts:\r\n  \r\n  1.  Head\r\n  2.  Eyes\r\n  3.  Face\r\n  4.  Neck\r\n  5.  Left Arm\r\n  6.  Right Arm\r\n  7.  Left Hand\r\n  8.  Right Hand\r\n  9.  Torso\r\n  10. Groin\r\n  11. Left Leg\r\n  12. Right Leg\r\n  13. Left Foot\r\n  14. Right Foot",
      "level": 4
   },
   {
      "keyword": "ivars",
      "text": "+--------------+---------+---------+---------+---------+---------+---------+\r\n|  Item Type   |  ivar1  |  ivar2  |  ivar3  |  ivar4  |  ivar5  |  ivar6  |\r\n+--------------+---------+---------+---------+---------+---------+---------+\r\n| armor        |Stop Pwr |Material |         |         |         |         |\r\n| bandolier    |Capacity |         |         |         |         |         |\r\n| bullet       |Caliber  |Type     |         |         |         |         |\r\n| firearm      |Caliber  |Fire Rate|Feed Mech| # hands |         |         |\r\n| key          |pins     |lock #   |         |         |         |         |\r\n| magazine     |Caliber  |Capacity |         |         |         |         |\r\n+--------------+---------+---------+---------+---------+---------+---------+",
      "level": 4
   }
]
